Angular Introduction
====================
March 20-23

Toby Dussek

9:30  start
11:00 break
12:30 lunch
3:00  break
4:30  end

Monday
> intro: ECMAScript versions, transpiler and tools
> configuation files (JSON)
> modular development
> Building a project
> the cli
 > generate a footer containing some text and render it under the other content
 > ng g c footer
> Structure of an Angular application
> properties and events
> Templates
> Binding expressions
> forms
> Template directives: NgFor, NgIf
> @Input, @Output, EventEmitter
> polyfils and Zone.js

Tuesday
> Consuming data
> BOM, WOM and DOM
> understanding modern ECMAScript
> Promises and Observables
> Architecture
> how to specify the parameter and return type of a fn inc generics
> ensure data type safety throughout request-response of HTTP
> overview of tool-chain
> HttpClient
> routing
> Route parameters and route data
> routing and authentication (sessions) - Angular Guards
> Applying CSS styles and classes [hidden]='value'

Wednesday
> lazy-loading
> TypeScript and Modern ECMAScript Essentials
> TS Interface
> production: AOT/JIT minification
> NgModule
> authorize/authenticate
> Events, Promises and Observables - RxJS
    https://rxmarbles.com and https://rxjs.dev
> Dealing with asynchronous results
> cache-busting - users are still seeing the old version after a new prod is released

Thursday
> questions: 
  > hard-coded API paths: can we config them?
  > early load: ngOnInit() in app.component
 > JS can we filter JSON data. Yes as soon as your JSON is loaded, it becomes an object
    - you then filter the {} using map, filter and reduce
  > locale welsh, dutch, international languges
> local storage options
> testing
  remember we can run any script using 'npm run ...'
> Angular architecture - encourage UNIT components - re-useable, testable, manageable
> custom components with Input() and Output() bindings (and classes/interfaces)
> sanitize
> redux
> Importing Angular libraries
  ng-bootstrap, ng-redux, ng-lint
> Using built-in pipes
- Using promises, observables, and the async pipe
> Component Hierarchies and data-management - use Redux at scale
> dependency injection
> Defining multiple router outlets and named router outlets
> Bundling, minify, uglify and tree-shaking


https://caniuse.com
https://builtwith.com
https://kangax.github.io/compat-table/es6/


Course outline
  https://www.frameworktraining.co.uk/courses/coding/javascript-js-libraries-frameworks/angular-training-course/

End of course
- post-course feedback https://frameworktraining.typeform.com/to/pB10Khia
- Repo is here: https://github.com/onionmccabbage/AngularIntroMarch2023